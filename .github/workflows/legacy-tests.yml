name: .Net Framework Tests (Legacy)
defaults:
  run:
    shell: bash

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]
    paths:
      - "**"
      - "!**.md"

jobs:
  # As this can run only on Windows machines, these tests should run only in CI
  end2end-tests: 
    name: End-to-End Tests
    runs-on: windows-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: tests
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: tests
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v4
          
      - name: Load .env file
        uses: xom9ikk/dotenv@v2.3.0
        with:
          load-mode: strict

      - name: Setup Visual Studio for .NET Framework
        uses: microsoft/setup-msbuild@v1
        with:
          vs-version: 'latest'

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2.0.1
        
      - name: Setup PostgreSQL Client
        shell: powershell  
        run: |
          choco install postgresql --params '/Password:${{ env.POSTGRES_PASSWORD }}' --no-progress -y
          
      - name: Setup MySQL Client
        shell: powershell
        run: |
          choco install mysql.utilities --no-progress -y
          
      - name: Init PostgreSQL Schema
        shell: powershell
        run: |
          $env:PGPASSWORD = "${{ env.POSTGRES_PASSWORD }}"
          psql -h localhost -p 5432 -U ${{ env.POSTGRES_USER }} -d ${{ env.TESTS_DB }} -f 'examples/config/postgresql/types/schema.sql' -f 'examples/config/postgresql/authors/schema.sql'
          
      - name: Restore and Build Test Projects
        shell: powershell
        run: |
          Get-ChildItem -Path examples -Recurse -Filter *.csproj |
            Where-Object { $_.FullName -like '*Legacy*' } |
            ForEach-Object { nuget restore $_.FullName }
          nuget restore ./end2end/EndToEndCommon/EndToEndCommon.csproj
          nuget restore ./end2end/EndToEndTestsLegacy/EndToEndTestsLegacy.csproj
          msbuild.exe ./end2end/EndToEndTestsLegacy/EndToEndTestsLegacy.csproj -p:Configuration=Release -p:TargetFramework=net8.0
          
      - name: Init MySQL Schema
        shell: powershell
        run: |
          mysql -h 127.0.0.1 -P 3306 -u root -proot -e "SET GLOBAL local_infile=1;"
          mysql -h 127.0.0.1 -P 3306 -u root -proot ${{ env.TESTS_DB }} -e "source examples/config/mysql/types/schema.sql; source examples/config/mysql/authors/schema.sql;"    

      - name: Run Tests
        shell: powershell
        run: |
          $path = vswhere -latest -products * -requires Microsoft.VisualStudio.Workload.ManagedDesktop Microsoft.VisualStudio.Workload.Web -requiresAny -property installationPath
          $path = join-path $path 'Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe'
          & $path ./end2end/EndToEndTestsLegacy/bin/Release/net472/EndToEndTestsLegacy.dll